@{
    ViewBag.Title = "Register"; ;
}
<ul class="path floatContainer">
    <li class="first">@Html.ActionLink("Forums", "List", "Forums")</li>
</ul>
<h1>@ViewBag.Title</h1>
@Html.ValidationSummary("<h3>Please check the following errors:</h3>", new Dictionary<string, object>()
	{
		{"email", new Dictionary<ValidationErrorType, string>(){
			{ValidationErrorType.NullOrEmpty, "Email must not be blank."}
			,{ValidationErrorType.Format, "Email format is not valid."}
			,{ValidationErrorType.DuplicateNotAllowed, "A user account already exists for the email address you entered."}}}
		,{"userName", new Dictionary<ValidationErrorType, string>(){
			{ValidationErrorType.NullOrEmpty, "Username must not be blank."}
			,{ValidationErrorType.Format, "Username format is not valid."}
			,{ValidationErrorType.DuplicateNotAllowed, "Username already in use"}}}
		,{"password", new Dictionary<ValidationErrorType, string>(){
			{ValidationErrorType.NullOrEmpty, "Password must not be blank."}
			,{ValidationErrorType.Format, "Password format is not valid."}
			,{ValidationErrorType.CompareNotMatch, "Password does not match the confirm password."}}}
	}, null)
@using (Html.BeginForm())
{
    <fieldset>
		<legend>Use the form below to create a new account</legend>
		<div class="formItem floatContainer">
			<label for="username">Username</label>
			@Html.TextBox("username")
		</div>
		<div class="formItem floatContainer">
			<label for="email">Email</label>
			@Html.TextBox("email")
		</div>
		<div class="formItem floatContainer">
			<label for="password">Password</label>
			@Html.Password("password")
			<span class="note">Passwords are required to be a minimum of @ViewData["PasswordLength"] characters in length.</span>
		</div>
		<div class="formItem floatContainer">
			<label for="email">Confirm Password:</label>
			@Html.Password("confirmPassword")
		</div>
		<div class="formItem buttons">
			<input type="submit" class="button" value="Create a new account" />
		</div>
    </fieldset>
}
